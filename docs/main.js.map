{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGit, newGitRepo } from \"./git-db.js\";\nimport { modes, toType } from \"./git-codec.js\";\n\nasync function main() {\n    const match = document.location.hash.match(/[^#]+/);\n    if (!match) throw new Error(\"Please add git repo to url after #\");\n    const [url] = match;\n    const git = await newGitRepo(url);\n    console.log(\"Mounting git repo\", url)\n    for await (const { hash, commit: { message, committer: { name, email, date } } } of commitLog(git, \"HEAD\")) {\n        console.log(`Commit: ${hash}\\n`\n            + `Committer: ${name} <${email}> ${new Date(date.seconds * 1000)}\\n`\n            + `\\n${message}`);\n    }\n    for await (const { path, mode, hash } of walkTree(git, \"HEAD\")) {\n        console.log(path, toType(mode), hash);\n    }\n}\nmain();\n\nasync function* walkTree(git: IGit, ref: string) {\n    const commit = await git.loadCommit(ref);\n    const queue: { path: string, mode: number, hash: string }[] = [\n        { path: \"/\", mode: modes.tree, hash: commit.tree }\n    ];\n    while (true) {\n        const entry = queue.shift();\n        if (!entry) break;\n        yield entry;\n        if (entry.mode === modes.tree) {\n            const tree = await git.loadTree(entry.hash);\n            for (const [name, { mode, hash }] of Object.entries(tree)) {\n                queue.push({ path: entry.path + name + (mode === modes.tree ? \"/\" : \"\"), mode, hash });\n            }\n        }\n    }\n}\n\n// Async Generator for printing log of commits.\nasync function* commitLog(git: IGit, ref: string) {\n    const commits: string[] = [await git.resolve(ref)];\n    while (true) {\n        const hash = commits.shift();\n        if (!hash) break;\n        const commit = await git.loadCommit(hash);\n        yield { hash, commit };\n        commits.push.apply(commits, commit.parents as string[]);\n    }\n}"]}